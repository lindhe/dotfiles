[user]
	name = Andreas LindhÃ©
[alias]
	a = add -p
	al = "!git config alias.${1:?} #"
	ado = "log -q --pretty='format:%B'"
	bi = bisect
	bra = branch -vv
	branch-age = "!git for-each-ref --sort=-committerdate refs/heads --format=\"%(refname:short)|%(committerdate:relative)\" | column -ts \"|\""
	bras = for-each-ref --sort=-committerdate refs/heads --format='%(refname:short)|%(committerdate:relative)'
	c = commit -v
	ca = commit -av
	cap = commit -vp
	change = commit --amend -v
	cl = clone
	cm = commit -m
	co = checkout
	cp = cherry-pick
	default-branch = "!~/git/lindhe/scripts/git/git-default-branch.sh"
	df = diff --ignore-space-change --color-words='\\w+|.'
	dff = diff --ignore-space-change --color-words='.'
	dfff = diff --ignore-space-change --word-diff-regex='.'
	email = "config --local user.email"
	files-in = diff-tree --no-commit-id --name-only -r
	fix = "!git branch ${1:?} $(git default-branch) && git nwt ${1:?} #"
	get = "!~/git/lindhe/scripts/git/git-get.py"
	get-gone = "!git branch -av | grep '\\[gone]' #"
	gh = "!git clone https://github.com/${1}.git #"
	h = help
	l = "!git ll origin/$(git default-branch)~1..."
	lb = "!git lob origin/$(git default-branch)~1..."
	ll = log --oneline --decorate
	lob = log --oneline --decorate --graph --branches --color=always
	log = log --decorate
	nb = "!git switch -c lindhe/${1:?} #"
	nwt = "!WTD=~/git/worktree/${1:?}; (git branch -l ${1:?} | grep -q ${1:?}) || echo ERROR: Branch ${1:?} not found 1>&2 && mkdir -p ${WTD} && git worktree add ${WTD} ${1:?} && echo ${WTD} #"
	new = diff --cached
	nw = diff --cached --ignore-space-change --color-words='\\w+|.'
	nww = diff --cached --ignore-space-change --color-words='.'
	nwww = diff --cached --ignore-space-change --word-diff-regex='.'
	pl = !git pull && git log -- ORIG_HEAD..origin/$(git branch --show-current)
	psuh = push
	reb = rebase
	rem = remote -v
	remove-gone = "!git branch -av | grep -E '^[^\\+].*\\[gone]' | awk '{ print $1 }' | xargs git branch -D #"
	review = "!git diff --color-words='\\w+|.' --color-moved=dimmed-zebra $(git merge-base $(git default-branch) HEAD) ${@} #"
	root = rev-parse --show-toplevel
	s = status
	shw = show --ignore-space-change --color-words='\\w+'
	shww = show --ignore-space-change --color-words='.'
	shwww = show --ignore-space-change --word-diff-regex='.'
	sorry = commit --amend --no-edit
	st = status
	sw = "!from=\"$(git branch --show-current)\"; git switch ${@:-$(git default-branch)} && (echo \"Old branch was ${from:?}\"; git diff --stat $(git default-branch)...) #"
	sync = "!git fetch upstream && git reset --hard upstream/$(git branch --show-current) #"
	track = "!git branch --set-upstream-to=${1:-origin}/$(git branch --show-current) $(git branch --show-current) #"
	unstage = restore --staged -p
	wtf = log -- ORIG_HEAD..HEAD
	whatchanged = log -- ORIG_HEAD..HEAD
	whats = "!git config alias.${1:?} #"
	wt = worktree
[branch]
	autosetuprebase = always
[pull]
	rebase = true
[core]
	attributesfile = ~/.gitattributes_global
	excludesfile = ~/.gitignore_global
	quotepath = off
[push]
	default = current
[color]
	status = always
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	required = true
[fetch]
	prune = true
[diff "sopsdiffer"]
	textconv = sops -d
[rerere]
	enabled = true
[credential "https://dev.azure.com"]
	useHttpPath = true
[include]
	path = ~/.config/git/wsl.gitconfig
[init]
	defaultBranch = master
