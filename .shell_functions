#!/usr/bin/env bash
# vim: set foldmethod=marker filetype=bash:

# Copy path to current working directory
cwd() {
    # If WSL
    if [[ -n ${WSLENV+x} ]]; then
        pwd | /mnt/c/Windows/System32/clip.exe
    else
        pwd | xclip -selection clipboard
        pwd | xclip -selection primary
    fi
}

datestamp() {
    date +'%F'
}

ed() {
  TMP_DIR="$(mktemp -d)"
  cd "${TMP_DIR}" || return
  echo -ne "\033]0;${TMP_DIR}\007"
}

# Copy a value from a Kubernetes Secret
kopy() {
  declare -r SECRET_NAME="${1:?}"
  declare -r SECRET_FIELD="${2:?}"
  kubectl get secret "${SECRET_NAME:?}" -o jsonpath="{ .data.${SECRET_FIELD} }" "${@:3}" | base64 -d | copy
}

# Timestamp in microseconds
now_micro() {
  date +'%s%6N'
}

# Timestamp in milliseconds
now_milli() {
  date +'%s%3N'
}

# Timestamp in nanoseconds
now_nano() {
  date +'%s%N'
}

timestamp() {
    date +'%F_%T'
}

# Set window title
title() {
    echo -ne "\033]0;${1}\007"
}

mcd() {
    mkdir -p "${1:?Missing argument to mcd.}"
    cd "${1}" || return
}

password() {
  if command -v openssl &> /dev/null; then
    openssl rand -base64 "${1:-32}" | paste -sd '' -
  else
    tr -dc A-Za-z0-9 </dev/urandom | head -c "${1:-32}" ; echo ''
  fi
}

#############################     ZSH specific     #############################

# shellcheck disable=SC2250
if [[ "$(readlink /proc/$$/exe | sed "s/.*\///")" == "zsh" ]]; then
  # Toggle a theme that is friendly for copying to ```console in Markdown
  zle -N _toggle_md_mode toggle_md_mode
  toggle_md_mode() {
    declare -r PLAIN_PROMPT='$ '
    if [[ "${PROMPT}" == "${PLAIN_PROMPT}" ]]; then
      zle && zle accept-line
      print '\n```'
      # Set fancy prompt:
      if command -v starship &> /dev/null; then
        eval "$(starship init zsh)"
      else
        echo "ERROR: starship not found." &> /dev/stderr
      fi
    else
      print_md_console=true
      # shellcheck disable=SC2317
      precmd() {
        print ''
        if [[ "${print_md_console}" == "true" ]]; then
          print '```console'
          print_md_console=false
        fi
      }
      PROMPT="${PLAIN_PROMPT}"
      # Reset everything {{{
      unset return_code
      unset user_host
      unset user_symbol
      unset current_dir
      unset vcs_branch
      unset rvm_ruby
      unset venv_prompt
      unset ZSH_THEME_RVM_PROMPT_OPTIONS
      unset RPROMPT
      unset ZSH_THEME_GIT_PROMPT_PREFIX
      unset ZSH_THEME_GIT_PROMPT_SUFFIX
      unset ZSH_THEME_GIT_PROMPT_DIRTY
      unset ZSH_THEME_GIT_PROMPT_CLEAN
      unset ZSH_THEME_HG_PROMPT_PREFIX
      unset ZSH_THEME_HG_PROMPT_SUFFIX
      unset ZSH_THEME_HG_PROMPT_DIRTY
      unset ZSH_THEME_HG_PROMPT_CLEAN
      unset ZSH_THEME_RUBY_PROMPT_PREFIX
      unset ZSH_THEME_RUBY_PROMPT_SUFFIX
      unset ZSH_THEME_VIRTUAL_ENV_PROMPT_PREFIX
      unset ZSH_THEME_VIRTUAL_ENV_PROMPT_SUFFIX
      unset ZSH_THEME_VIRTUALENV_PREFIX
      unset ZSH_THEME_VIRTUALENV_SUFFIX
      # }}}
      zle && zle accept-line
    fi
  }
fi
